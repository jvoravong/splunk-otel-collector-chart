name: Splunk Platform Functional Test

on: pull_request

jobs:
  e2e-test:
    name: ${{ matrix.container_runtime }} ${{ matrix.kubernetes_version }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        container_runtime:
          - "docker"
          - "containerd"
          - "cri-o"
        # For up-to-date information see: https://github.com/kubernetes/minikube/releases
        kubernetes_version:
          - "v1.25.1"
          - "v1.24.3"
          - "v1.23.6"
    env:
      CI_SPLUNK_PORT: 8089
      CI_SPLUNK_USERNAME: admin
      CI_SPLUNK_HEC_TOKEN: a6b5e77f-d5f6-415a-bd43-930cecb12959
      CI_SPLUNK_PASSWORD: helloworld
      CI_INDEX_EVENTS: ci_events
      CI_INDEX_METRICS: ci_metrics
      CONTAINER_RUNTIME: ${{ matrix.container_runtime }}
      KUBERNETES_VERSION:  ${{ matrix.kubernetes_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Minikube
        run: |
          # Install Minikube
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          sudo sysctl fs.protected_regular=0
          # Start Minikube and Wait
          minikube start --container-runtime=${CONTAINER_RUNTIME} --cpus 2 --memory 5g --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check
          kubectl apply -f https://docs.projectcalico.org/v3.24/manifests/calico.yaml
          sleep 5
            kubectl wait --for=condition=Ready nodes --all --timeout=180s
          sleep 5

      - name: Install Splunk
        run: |
          # Wait until default service account is created
          until kubectl -n default get serviceaccount default -o name; do
            sleep 1;
          done
          # Install Splunk on minikube
          kubectl apply -f ci_scripts/k8s-splunk.yml
          # Wait until splunk is ready
          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do
            sleep 1;
          done
          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})
          # Setup Indexes
          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event
          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event
          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event
          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric
          # Enable HEC services
          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable
          # Create new HEC token
          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d "name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=main&indexes=main,ci_events,ci_metrics,ns-anno,pod-anno" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http
          # Restart Splunk
          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST

          sleep 5
          kubectl rollout status deployment golang-hello-world-web -n default --timeout=3000s

          kubectl get jobs --all-namespaces


      - name: Deploy log generator
        run: |
          sleep 60
          kubectl get pods --all-namespaces
          kubectl logs -l component=agent-collector

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Run functional tests
        run: |
          kubectl get nodes
          export PYTHONWARNINGS="ignore:Unverified HTTPS request"
          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})
          cd test
          pip install --upgrade pip
          pip install -r requirements.txt
          echo "Running functional tests....."
          python -m pytest \
          	--splunkd-url https://$CI_SPLUNK_HOST:8089 \
          	--splunk-user admin \
          	--splunk-password $CI_SPLUNK_PASSWORD \
          	-p no:warnings -s
#          # Leave this here for debugging
#          sleep 180
#          echo "Getting agent logs....."
#          kubectl get pods -l release=ci-sck --no-headers=true  | awk '/agent/{print $1}' | xargs kubectl logs
#          echo "Getting collector logs....."
#          kubectl get pods -l release=ci-sck --no-headers=true  | awk '/cluster/{print $1}' | xargs kubectl logs

      - name: Debug info
        if: always()
        run: |
          kubectl get jobs --all-namespaces
          kubectl get pods --all-namespaces
          kubectl get configmap
          kubectl logs -l component=agent-collector
