name: Check for new instrumentation versions

# Description:
# This workflow is responsible for checking for new versions of Splunk instrumentation libraries
# used in operator based auto-instrumentation and updating the values.yaml if necessary.

on:
  schedule:
    # Run every 12th hour at minute 45 past.
    - cron: "45 */12 * * *"
  workflow_dispatch:
    inputs:
      DEBUG_MODE:
        description: 'Enable debug mode'
        required: false
        default: 'false'

env:
  VALUES_YAML: helm-charts/splunk-otel-collector/values.yaml
  LATEST_API: https://api.github.com/repos/signalfx/splunk-otel-{lang}/releases/latest

jobs:
  maybe_update:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Add languages that require version updates here
        language: ['java', 'nodejs']
    steps:
      - uses: actions/checkout@v4

      - name: Update Version
        id: swizzle_version
        run: |
          echo "Update Splunk Operator Instrumentation for ${{ matrix.language }}"

          # Set debug argument if DEBUG_MODE is true
          DEBUG_ARG=""
          if [ "${{ github.event.inputs.DEBUG_MODE }}" == "true" ]; then
            DEBUG_ARG="--debug"
          fi

          # Run the update script and handle errors
          # Emits output env vars swizzle_version.outputs.TAG_LOCAL and steps.swizzle_version.outputs.TAG_UPSTREAM
          ./ci_scripts/update-images-operator-splunk.sh ${{ matrix.language }} $DEBUG_ARG || exit 1

          # Check if an update is needed
          if [ "$NEED_UPDATE" -eq 0 ]; then
            echo "No updates detected. Exiting."
            exit 0
          fi

          echo "Rendering chart template..."
          make render

          echo "Displaying current git diff..."
          git --no-pager diff

      - name: Set Git Config
        if: ${{ steps.swizzle_version.outputs.NEED_UPDATE == 1 }}
        run: |
          # Set global Git config for author and committer
          ./ci_scripts/base_util.sh setup_gitI

      - name: PR the new version
        if: ${{ steps.swizzle_version.outputs.NEED_UPDATE == 1 }}
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Update ${{ matrix.language }} instrumentation version
          title: Bump ${{ matrix.language }} from ${{ steps.swizzle_version.outputs.TAG_LOCAL }} to ${{ steps.swizzle_version.outputs.TAG_UPSTREAM }} in ${{ env.VALUES_YAML }}
          body: Use the latest version of ${{ matrix.language }}
          branch: "update-${{ matrix.language }}" # Same branch name for all PRs
          base: main
          delete-branch: true
          modify-outputs: false

      - name: Check Out Branch
        if: ${{ steps.swizzle_version.outputs.NEED_UPDATE == 1 }}
        run: |
          # Set global Git config for author and committer
          ./ci_scripts/base_util.sh setup_git

          # Fetch the latest changes from the remote repository
          git fetch

          # Check out the existing "update-${{ matrix.language }}" branch
          git checkout "update-${{ matrix.language }}" || git checkout -b "update-${{ matrix.language }}"

      - name: Get PR Issue Number
        if: ${{ steps.swizzle_version.outputs.NEED_UPDATE == 1 }}
        id: pr_info
        run: |
          PR_URL=$(jq -r '.pull_request.html_url' $GITHUB_EVENT_PATH)
          PR_ISSUE_NUMBER=$(basename $PR_URL)
          echo "PR_ISSUE_NUMBER=$PR_ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Create Changelog
        if: ${{ steps.swizzle_version.outputs.NEED_UPDATE == 1 }}
        run: |
          make chlog-new CHANGE_TYPE=enhancement COMPONENT=operator NOTE="Bump ${{ matrix.language }} to ${{ steps.swizzle_version.outputs.TAG_UPSTREAM }} in ${{ env.VALUES_YAML }}" ISSUES=${{ env.PR_ISSUE_NUMBER }}

      - name: Commit and Push Changelog
        if: ${{ steps.swizzle_version.outputs.NEED_UPDATE == 1 }}
        run: |
          # Add all changes and files
          git add .

          # Commit the changelog with a message
          git commit -m "Add changelog for PR #${{ env.PR_ISSUE_NUMBER }}"

          # Push the changes to the PR branch
          git push origin "update-${{ matrix.language }}"
