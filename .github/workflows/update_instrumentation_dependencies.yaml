name: Check for new instrumentation versions

on:
  schedule:
    # Run every 12th hour at minute 45 past.
    - cron: "45 */12 * * *"
  workflow_dispatch:

env:
  VALUES_YAML: helm-charts/splunk-otel-collector/values.yaml
  LATEST_API: https://api.github.com/repos/signalfx/splunk-otel-{lang}/releases/latest

jobs:
  maybe_update:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Currently this workflow will update the listed operator instrumentation dependencies in values.yaml
        language: ['java'] # Add other languages here
    steps:
      - uses: actions/checkout@v4
      - name: swizzle version
        id: update_instrumentation
        run: |
          REPO=ghcr.io/signalfx/splunk-otel-${{ matrix.language }}/splunk-otel-${{ matrix.language }}
          CURRENT_VERSION=$(grep $REPO $VALUES_YAML | awk -F: '{print $2}' | tr -d ' "')
          LATEST_VERSION=$(curl -qs -H "Accept: application/vnd.github+json" $(echo $LATEST_API | sed "s/{lang}/${{ matrix.language }}/g") | jq -r .tag_name)
          echo "Current version of ${{ matrix.language }} is $CURRENT_VERSION, latest is $LATEST_VERSION"

          if [ "$LATEST_VERSION" == "$CURRENT_VERSION" ]; then
            echo We are already up to date. Nothing else to do.
          else
            echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_OUTPUT
            echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT

            echo 'Verifying that the image is pullable...'
            echo '(If this fails, the image version is out of sync with ghcr version)'
            docker pull $REPO:$LATEST_VERSION
            echo 'Looks like we are good to update...'
            echo Updating to new version in values.yaml
            echo "NEED_UPDATE=1" >> $GITHUB_OUTPUT
            VLINE=$(grep -n "${REPO}" $VALUES_YAML | cut -f1 -d:)
            echo "Line number for ${REPO} in ${VALUES_YAML} is: ${VLINE}"
            OLD_VER=$(sed -n "${VLINE}p" $VALUES_YAML | grep -oP 'v\K[0-9.]+')
            echo "Old version number is: ${OLD_VER}"
            NEW_VERSION=${LATEST_VERSION#v} # removes 'v' from the start of the string
            echo "New version number is: ${NEW_VERSION}"
            echo "sed: ${VLINE}s/${OLD_VER}/${NEW_VERSION}/"
            sed -i "${VLINE}s/${OLD_VER}/${NEW_VERSION}/" $VALUES_YAML

            echo Updating rendered examples
            make render

            echo "Current git diff:"
            git --no-pager diff
          fi
      - name:
        id: create_pr
        if: ${{ steps.update_instrumentation.outputs.NEED_UPDATE == 1 }}
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Bump ${{ matrix.language }} instrumentation dependency from ${{ steps.update_instrumentation.outputs.CURRENT_VERSION }} to ${{ steps.update_instrumentation.outputs.LATEST_VERSION }}"
          title: "Bump ${{ matrix.language }} instrumentation dependency from ${{ steps.update_instrumentation.outputs.CURRENT_VERSION }} to ${{ steps.update_instrumentation.outputs.LATEST_VERSION }}"
          body: "Update to the new version of the ${{ matrix.language }} instrumentation dependency."
          branch: "update-${{ matrix.language }}"
          base: main
          delete-branch: true
          modify-outputs: false
      - name: Create changelog entry
        if: ${{ steps.update_instrumentation.outputs.NEED_UPDATE == 1 }}
        run: |
          git fetch origin "update-${{ matrix.language }}"
          git checkout "update-${{ matrix.language }}"
          echo "Current git diff:"

          # If a previous unreleased changelog entry already exist it is updated.
          make chlog-new \
            CHANGE_TYPE=enhancement \
            COMPONENT=operator \
            NOTE="Update ${{ matrix.language }} instrumentation version from $CURRENT_VERSION to $LATEST_VERSION" \
            ISSUES="[${{ steps.create_pr.outputs.pr-number }}]" \
            FILENAME="update-${{ matrix.language }}-instrumentation"

          echo "Current git diff:"
          git --no-pager diff
      - name: Update PR with CHANGELOG
        if: ${{ steps.update_instrumentation.outputs.NEED_UPDATE == 1 }}
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Add or update .chloggen/update-${{ matrix.language }}-instrumentation.yaml"
          title: "Bump ${{ matrix.language }} instrumentation dependency from ${{ steps.update_instrumentation.outputs.CURRENT_VERSION }} to ${{ steps.update_instrumentation.outputs.LATEST_VERSION }}"
          body: "Update to the new version of the ${{ matrix.language }} instrumentation dependency."
          branch: "update-${{ matrix.language }}"
          base: main
          delete-branch: true
          modify-outputs: false
