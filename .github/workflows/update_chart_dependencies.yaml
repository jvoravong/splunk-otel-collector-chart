name: Check for new chart dependency updates

on:
  schedule:
    - cron: "45 */12 * * *"
  workflow_dispatch:

env:
  CHART_YAML: helm-charts/splunk-otel-collector/Chart.yaml

jobs:
  maybe_update:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ['cert-manager', 'opentelemetry-operator'] # Add other repos here
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Update Chart
        id: update_chart
        run: |
          # Run make repo-update to ensure repositories are up-to-date
          make repo-update

          # Fetch the latest version using helm search repo
          LATEST_VER=$(helm search repo ${{ matrix.repo }} --versions | awk 'NR==2{print $2}')
          echo "LATEST_VER=$LATEST_VER" >> $GITHUB_OUTPUT

          # Retrieve the current version from chart.yaml
          DEP_LINE=$(yq eval ".dependencies[].name" $CHART_YAML | grep -n "${{ matrix.repo }}" | cut -d ':' -f 1)
          DEP_INDENT=$(yq eval ".dependencies[$DEP_LINE]" $CHART_YAML | awk '{ match($0, /(\s*)-/, a); print a[1] }')
          DEP_ENTRY=$(yq eval ".dependencies[$DEP_LINE]" $CHART_YAML)

          echo "Current version of ${{ matrix.repo }} is $(yq eval "$DEP_ENTRY | .version" -)", "latest is $LATEST_VER"

          if [ "$(yq eval "$DEP_ENTRY | .version" -)" == "$LATEST_VER" ]; then
            echo We are already up to date. Nothing else to do.
          else
            echo 'Looks like we need to update...'
            echo Updating to new version in chart.yaml
            echo "NEED_UPDATE=1" >> $GITHUB_OUTPUT

            # Update the version in chart.yaml
            echo "$(yq eval "$DEP_ENTRY | .version = \"$LATEST_VER\"" -)" > temp_dep.yaml
            sed -i "${DEP_LINE}r temp_dep.yaml" $CHART_YAML
            rm temp_dep.yaml

            echo "Current git diff:"
            git --no-pager diff
          fi
      - name: Render chart templates
        if: ${{ steps.swizzle_version.outputs.NEED_UPDATE == 1 }}
        run: |
          make render
          echo "Current git diff:"
          git --no-pager diff
      - name: PR the new version
        if: ${{ steps.update_chart.outputs.NEED_UPDATE == 1 }}
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Update ${{ matrix.repo }} chart version
          title: Update ${{ matrix.repo }} chart version to ${{ steps.update_chart.outputs.LATEST_VER }}
          body: Use the new version of the ${{ matrix.repo }} chart
          branch: "update-${{ matrix.repo }}-${{ steps.update_chart.outputs.LATEST_VER }}"
          base: main
          delete-branch: true
          modify-outputs: false
