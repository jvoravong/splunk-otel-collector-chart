name: Check for new chart dependency updates

on:
  schedule:
    # Run every 12 hrs on the 11th hour at 30 minutes past.
    - cron: '30 11 */12 * *'
  workflow_dispatch:

env:
  CHART_YAML: helm-charts/splunk-otel-collector/Chart.yaml

jobs:
  maybe_update:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Currently, this workflow will update the listed dependencies in the Chart.yaml
        repo: ['cert-manager', 'opentelemetry-operator'] # Add other repos here
    steps:
      - uses: actions/checkout@v4
      - name: Update Chart
        id: update_chart
        run: |
          # Run make repo-update to ensure repositories are up-to-date
          make repo-update

          # Fetch the latest version using helm search repo
          LATEST_VERSION=$(helm search repo ${{ matrix.repo }} --versions | awk 'NR==2{print $2}')
          echo "LATEST_VERSION=$LATEST_VERSION" >> GITHUB_OUTPUT

          # Retrieve the current version from chart.yaml
          CURRENT_VERSION=$(yq eval ".dependencies[] | select(.name == \"${{ matrix.repo }}\") | .version" ${{ env.CHART_YAML }})
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> GITHUB_OUTPUT

          echo "Current version of ${{ matrix.repo }} is $CURRENT_VERSION, latest is $LATEST_VERSION"

          if [ "$LATEST_VER" == "$DEP_PATH" ]; then
            echo We are already up to date. Nothing else to do.
          else
            echo 'Looks like we need to update...'
            echo Updating to new version in chart.yaml
            echo "NEED_UPDATE=1" >> $GITHUB_OUTPUT

            # Update the version in chart.yaml using yq and jq
            DEP_LINE=$(yq eval ".dependencies | keys | map(tonumber) | map(select(. != null)) | map(select(. < 10000)) | map(. + 1)" $CHART_YAML | jq ".[] | select(.[\"name\"] == \"${{ matrix.repo }}\")")
            sed -i "${DEP_LINE}s/$DEP_PATH/$LATEST_VER/" $CHART_YAML

            echo Updating rendered examples
            make render

            echo "Current git diff:"
            git --no-pager diff
      - name:
        id: create_pr
        if: ${{ steps.update_chart.outputs.NEED_UPDATE == 1 }}
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Bump ${{ matrix.repo }} chart dependency from ${{ steps.update_chart.outputs.CURRENT_VERSION }} to ${{ steps.update_chart.outputs.LATEST_VERSION }}"
          title: "Bump ${{ matrix.repo }} chart dependency from ${{ steps.update_chart.outputs.CURRENT_VERSION }} to ${{ steps.update_chart.outputs.LATEST_VERSION }}"
          body: "Update to the new version of the ${{ matrix.repo }} chart dependency."
          branch: "update-${{ matrix.repo }}"
          base: main
          delete-branch: true
          modify-outputs: false
      - name: Create changelog entry
        if: ${{ steps.update_chart.outputs.NEED_UPDATE == 1 }}
        run: |
          # If a previous unreleased changelog entry already exist it is updated.
          make chlog-new \
            CHANGE_TYPE=enhancement \
            COMPONENT=${{ matrix.repo }} \
            NOTE="Update ${{ matrix.repo }} chart dependency version from $CURRENT_VERSION to $LATEST_VERSION" \
            ISSUES="[${{ steps.create_pr.outputs.pr-number }}]" \
            FILENAME="update-${{ matrix.repo }}-chart"
      - name: Update PR with CHANGELOG
        if: ${{ steps.update_chart.outputs.NEED_UPDATE == 1 }}
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Add or update .chloggen/update-${{ matrix.repo }}-chart.yaml"
          title: "Bump ${{ matrix.repo }} chart dependency from ${{ steps.update_chart.outputs.CURRENT_VERSION }} to ${{ steps.update_chart.outputs.LATEST_VERSION }}"
          body: "Update to the new version of the ${{ matrix.repo }} chart dependency."
          branch: "update-${{ matrix.repo }}"
          base: main
          delete-branch: true
          modify-outputs: false
